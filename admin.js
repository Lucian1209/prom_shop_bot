// –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞ –ø–∞–Ω–µ–ª—å
module.exports = function (bot, orders, adminOrders) {
  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
  const adminStates = {};
  
  // –•–µ–ª–ø–µ—Ä –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
  const clearState = (chatId) => {
    if (adminStates[chatId]) {
      delete adminStates[chatId];
    }
  };

  // –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  bot.onText(/\/admin/, (msg) => {
    const chatId = msg.chat.id;
    
    if (chatId.toString() !== process.env.ADMIN_CHAT_ID) return;
    
    // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω
    clearState(chatId);

    bot.sendMessage(chatId, 'üîê *–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞*', {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'admin_stats' }],
          [{ text: 'üßæ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è', callback_data: 'admin_orders' }],
          [{ text: 'üõçÔ∏è –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏', callback_data: 'admin_products' }],
          [{ text: 'üì¢ –†–æ–∑—Å–∏–ª–∫–∞', callback_data: 'admin_broadcast' }]
        ]
      }
    });
  });

  // –û–±—Ä–æ–±–Ω–∏–∫ callback-–∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ
  bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const messageId = query.message.message_id;
    const data = query.data;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –∞–¥–º—ñ–Ω
    if (chatId.toString() !== process.env.ADMIN_CHAT_ID) return;
    
    // –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callback, —â–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ "–≥–æ–¥–∏–Ω–Ω–∏–∫"
    bot.answerCallbackQuery(query.id);

    // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º—ñ–Ω–∞
    if (data === 'admin_back') {
      clearState(chatId);
      
      bot.editMessageText('üîê *–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞*', {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'admin_stats' }],
            [{ text: 'üßæ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è', callback_data: 'admin_orders' }],
            [{ text: 'üõçÔ∏è –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏', callback_data: 'admin_products' }],
            [{ text: 'üì¢ –†–æ–∑—Å–∏–ª–∫–∞', callback_data: 'admin_broadcast' }]
          ]
        }
      });
      return;
    }

    // ----- –°–¢–ê–¢–ò–°–¢–ò–ö–ê -----
    if (data === 'admin_stats') {
      // –û–±—á–∏—Å–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–º–æ–≤–ª–µ–Ω—å
      const totalOrders = adminOrders.length;
      
      // –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏
      const last24Hours = adminOrders.filter(order => {
        const orderDate = new Date(order.date);
        const now = new Date();
        const diff = now - orderDate;
        return diff < 24 * 60 * 60 * 1000; // 24 –≥–æ–¥–∏–Ω–∏ –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
      }).length;
      
      // –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å
      const lastWeek = adminOrders.filter(order => {
        const orderDate = new Date(order.date);
        const now = new Date();
        const diff = now - orderDate;
        return diff < 7 * 24 * 60 * 60 * 1000; // 7 –¥–Ω—ñ–≤ —É –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
      }).length;
      
      // –ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ —Ç–æ–≤–∞—Ä–∏ (—Ç–æ–ø-3)
      const productCounts = {};
      adminOrders.forEach(order => {
        productCounts[order.product] = (productCounts[order.product] || 0) + 1;
      });
      
      // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—é
      const topProducts = Object.entries(productCounts)
        .sort((a, b) => b[1] - a[1])
        .slice(0, 3)
        .map(([name, count], index) => `${index + 1}. ${name} - ${count} –∑–∞–º–æ–≤–ª.`)
        .join('\n');
      
      bot.editMessageText(
        `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å*\n\n` +
        `–í—Å—å–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω—å: *${totalOrders}*\n` +
        `–ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏: *${last24Hours}*\n` +
        `–ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å: *${lastWeek}*\n\n` +
        `*–ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ —Ç–æ–≤–∞—Ä–∏:*\n${topProducts || '–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö'}`,
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_back' }]
            ]
          }
        }
      );
      return;
    }

    // ----- –ó–ê–ú–û–í–õ–ï–ù–ù–Ø -----
    if (data === 'admin_orders') {
      if (adminOrders.length === 0) {
        bot.editMessageText('üìù *–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è*\n\n–ó–∞–º–æ–≤–ª–µ–Ω—å –ø–æ–∫–∏ –Ω–µ–º–∞—î.', {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_back' }]
            ]
          }
        });
        return;
      }

      // –ü–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω—é –æ–ø—Ü—ñ–π –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å
      bot.editMessageText('üìù *–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏*\n\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:', {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üìã –û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', callback_data: 'admin_orders_recent' }],
            [{ text: 'üîç –ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å', callback_data: 'admin_orders_search' }],
            [{ text: 'üìÖ –ó–∞ –ø–µ—Ä—ñ–æ–¥', callback_data: 'admin_orders_period' }],
            [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_back' }]
          ]
        }
      });
      return;
    }

    // –û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    if (data === 'admin_orders_recent') {
      // –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ 5 –∑–∞–º–æ–≤–ª–µ–Ω—å —ñ —Å–æ—Ä—Ç—É—î–º–æ –≤ –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–º—É –ø–æ—Ä—è–¥–∫—É
      const recent = adminOrders.slice(-5).reverse();
      
      let message = 'üìã *–û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:*\n\n';
      
      recent.forEach((order, i) => {
        const orderDate = new Date(order.date);
        const formattedDate = `${orderDate.getDate().toString().padStart(2, '0')}.${(orderDate.getMonth() + 1).toString().padStart(2, '0')}.${orderDate.getFullYear()} ${orderDate.getHours().toString().padStart(2, '0')}:${orderDate.getMinutes().toString().padStart(2, '0')}`;
        
        message += `*#${recent.length - i}* (${formattedDate})\n`;
        message += `üì¶ –¢–æ–≤–∞—Ä: ${order.product}\n`;
        message += `üë§ –ö–ª—ñ—î–Ω—Ç: ${order.name}\n`;
        message += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n`;
        message += `üè† –ê–¥—Ä–µ—Å–∞: ${order.address}\n\n`;
      });
      
      // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏
      const keyboard = recent.map((order, i) => [
        { text: `‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å #${recent.length - i}`, callback_data: `admin_order_status_${order.id}` }
      ]);
      
      // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
      keyboard.push([{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_orders' }]);
      
      bot.editMessageText(message, {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: keyboard
        }
      });
      return;
    }

    // –ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    if (data.startsWith('admin_order_status_')) {
      const orderId = data.split('admin_order_status_')[1];
      
      // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ ID
      const order = adminOrders.find(o => o.id.toString() === orderId);
      
      if (!order) {
        bot.sendMessage(chatId, '‚ùå –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
      }
      
      // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–∂–ª–∏–≤—ñ —Å—Ç–∞—Ç—É—Å–∏
      bot.editMessageText(
        `‚úèÔ∏è *–ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #${orderId}*\n\n` +
        `üì¶ –¢–æ–≤–∞—Ä: ${order.product}\n` +
        `üë§ –ö–ª—ñ—î–Ω—Ç: ${order.name}\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n` +
        `–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å: ${order.status || '–ù–æ–≤–∏–π'}\n\n` +
        `–û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å:`,
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üÜï –ù–æ–≤–∏–π', callback_data: `admin_set_status_${orderId}_new` }],
              [{ text: '‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ', callback_data: `admin_set_status_${orderId}_confirmed` }],
              [{ text: 'üöö –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ', callback_data: `admin_set_status_${orderId}_shipped` }],
              [{ text: '‚úì –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', callback_data: `admin_set_status_${orderId}_delivered` }],
              [{ text: '‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ', callback_data: `admin_set_status_${orderId}_canceled` }],
              [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_orders_recent' }]
            ]
          }
        }
      );
      return;
    }

    // –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É
    if (data.startsWith('admin_set_status_')) {
      const parts = data.split('_');
      const orderId = parts[3];
      const newStatus = parts[4];
      
      // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ ID
      const orderIndex = adminOrders.findIndex(o => o.id.toString() === orderId);
      
      if (orderIndex === -1) {
        bot.sendMessage(chatId, '‚ùå –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
      }
      
      // –ú–∞–ø–∞ —Å—Ç–∞—Ç—É—Å—ñ–≤ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
      const statusMap = {
        'new': '–ù–æ–≤–∏–π',
        'confirmed': '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ',
        'shipped': '–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ',
        'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ',
        'canceled': '–°–∫–∞—Å–æ–≤–∞–Ω–æ'
      };
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å
      adminOrders[orderIndex].status = statusMap[newStatus];
      
      // –Ü–Ω—Ñ–æ—Ä–º—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ –∑–º—ñ–Ω—É —Å—Ç–∞—Ç—É—Å—É
      if (newStatus !== 'new' && adminOrders[orderIndex].userId) {
        bot.sendMessage(
          adminOrders[orderIndex].userId,
          `üîî *–°—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ*\n\n` +
          `üì¶ –¢–æ–≤–∞—Ä: ${adminOrders[orderIndex].product}\n` +
          `–°—Ç–∞—Ç—É—Å: *${statusMap[newStatus]}*`,
          { parse_mode: 'Markdown' }
        ).catch(error => {
          // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –ø—Ä–æ—Å—Ç–æ —ñ–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É
          console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É:', error.message);
        });
      }
      
      // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∞–¥–º—ñ–Ω–∞
      bot.editMessageText(
        `‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #${orderId} —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ *${statusMap[newStatus]}*`,
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –ù–∞–∑–∞–¥ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω—å', callback_data: 'admin_orders_recent' }]
            ]
          }
        }
      );
      return;
    }

    // –ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å
    if (data === 'admin_orders_search') {
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –ø–æ—à—É–∫—É
      adminStates[chatId] = { action: 'search_orders' };
      
      bot.editMessageText(
        'üîç *–ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å*\n\n' +
        '–í–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç –¥–ª—è –ø–æ—à—É–∫—É (—ñ–º\'—è –∫–ª—ñ—î–Ω—Ç–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∞–±–æ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É):',
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_orders' }]
            ]
          }
        }
      );
      return;
    }

    // ----- –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –¢–û–í–ê–†–ê–ú–ò -----
    if (data === 'admin_products') {
      bot.editMessageText('üõçÔ∏è *–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏*\n\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:', {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: '‚ûï –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä', callback_data: 'admin_add_product' }],
            [{ text: 'üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤', callback_data: 'admin_list_products' }],
            [{ text: 'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –∑ Prom.ua', callback_data: 'admin_sync_products' }],
            [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_back' }]
          ]
        }
      });
      return;
    }

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
    if (data === 'admin_add_product') {
      adminStates[chatId] = { action: 'add_product', step: 'name' };
      
      bot.editMessageText(
        '‚ûï *–î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä—É*\n\n' +
        '–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É:',
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_products' }]
            ]
          }
        }
      );
      return;
    }

    // –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ç–æ–≤–∞—Ä—ñ–≤ –∑ Prom.ua
    if (data === 'admin_sync_products') {
      bot.editMessageText(
        'üîÑ *–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ç–æ–≤–∞—Ä—ñ–≤ –∑ Prom.ua*\n\n' +
        '–ü–æ—á–∞—Ç–æ–∫ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó... –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ.',
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown'
        }
      );
      
      try {
        // –¢—É—Ç –º–∞—î –±—É—Ç–∏ –ª–æ–≥—ñ–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ Prom.ua API
        // –î–ª—è –ø—Ä–∏–∫–ª–∞–¥—É —Ä–æ–±–∏–º–æ –∑–∞—Ç—Ä–∏–º–∫—É
        setTimeout(() => {
          bot.editMessageText(
            '‚úÖ *–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ*\n\n' +
            '–í—Å—ñ —Ç–æ–≤–∞—Ä–∏ –∑ Prom.ua —É—Å–ø—ñ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω—ñ.',
            {
              chat_id: chatId,
              message_id: messageId,
              parse_mode: 'Markdown',
              reply_markup: {
                inline_keyboard: [
                  [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_products' }]
                ]
              }
            }
          );
        }, 2000);
      } catch (error) {
        bot.editMessageText(
          '‚ùå *–ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó*\n\n' +
          `–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: ${error.message}`,
          {
            chat_id: chatId,
            message_id: messageId,
            parse_mode: 'Markdown',
            reply_markup: {
              inline_keyboard: [
                [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_products' }]
              ]
            }
          }
        );
      }
      return;
    }

    // ----- –†–û–ó–°–ò–õ–ö–ê -----
    if (data === 'admin_broadcast') {
      bot.editMessageText(
        'üì¢ *–†–æ–∑—Å–∏–ª–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å*\n\n' +
        '–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ä–æ–∑—Å–∏–ª–∫–∏:',
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üë• –í—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º', callback_data: 'admin_broadcast_all' }],
              [{ text: 'üõí –õ–∏—à–µ –∫–ª—ñ—î–Ω—Ç–∞–º –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏', callback_data: 'admin_broadcast_customers' }],
              [{ text: 'üÜï –†–æ–∑—Å–∏–ª–∫–∞ –∑ –∫–Ω–æ–ø–∫–∞–º–∏', callback_data: 'admin_broadcast_buttons' }],
              [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_back' }]
            ]
          }
        }
      );
      return;
    }

    // –†–æ–∑—Å–∏–ª–∫–∞ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º
    if (data === 'admin_broadcast_all') {
      adminStates[chatId] = { action: 'broadcast', type: 'all' };
      
      bot.editMessageText(
        'üì¢ *–†–æ–∑—Å–∏–ª–∫–∞ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º*\n\n' +
        '–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏:',
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_broadcast' }]
            ]
          }
        }
      );
      return;
    }

    // –†–æ–∑—Å–∏–ª–∫–∞ –ª–∏—à–µ –∫–ª—ñ—î–Ω—Ç–∞–º
    if (data === 'admin_broadcast_customers') {
      adminStates[chatId] = { action: 'broadcast', type: 'customers' };
      
      bot.editMessageText(
        'üì¢ *–†–æ–∑—Å–∏–ª–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞–º –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏*\n\n' +
        '–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏:',
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_broadcast' }]
            ]
          }
        }
      );
      return;
    }

    // –†–æ–∑—Å–∏–ª–∫–∞ –∑ –∫–Ω–æ–ø–∫–∞–º–∏
    if (data === 'admin_broadcast_buttons') {
      adminStates[chatId] = { action: 'broadcast', type: 'buttons', step: 'text' };
      
      bot.editMessageText(
        'üì¢ *–†–æ–∑—Å–∏–ª–∫–∞ –∑ –∫–Ω–æ–ø–∫–∞–º–∏*\n\n' +
        '–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏:',
        {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_broadcast' }]
            ]
          }
        }
      );
      return;
    }
  });

  // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –∞–¥–º—ñ–Ω–∫–∏
  bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text || '';
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –∞–¥–º—ñ–Ω
    if (chatId.toString() !== process.env.ADMIN_CHAT_ID) return;
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è —Ü—å–æ–≥–æ —á–∞—Ç—É
    if (!adminStates[chatId]) return;
    
    const state = adminStates[chatId];

    // ----- –û–ë–†–û–ë–ö–ê –ü–û–®–£–ö–£ –ó–ê–ú–û–í–õ–ï–ù–¨ -----
    if (state.action === 'search_orders') {
      // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω
      clearState(chatId);
      
      // –ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑–∞ —Ç–µ–∫—Å—Ç–æ–º
      const query = text.toLowerCase();
      const results = adminOrders.filter(order => 
        order.name.toLowerCase().includes(query) || 
        order.phone.toLowerCase().includes(query) || 
        order.product.toLowerCase().includes(query) ||
        (order.address && order.address.toLowerCase().includes(query))
      );
      
      if (results.length === 0) {
        bot.sendMessage(chatId, 
          'üîç *–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É*\n\n–ó–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.',
          {
            parse_mode: 'Markdown',
            reply_markup: {
              inline_keyboard: [
                [{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_orders' }]
              ]
            }
          }
        );
        return;
      }
      
      // –û–±–º–µ–∂—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥–æ –ø–µ—Ä—à–∏—Ö 5
      const limitedResults = results.slice(0, 5);
      
      let message = `üîç *–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –∑–∞ "${text}"*\n\n`;
      
      limitedResults.forEach((order, i) => {
        const orderDate = new Date(order.date);
        const formattedDate = `${orderDate.getDate().toString().padStart(2, '0')}.${(orderDate.getMonth() + 1).toString().padStart(2, '0')}.${orderDate.getFullYear()}`;
        
        message += `*#${order.id}* (${formattedDate})\n`;
        message += `üì¶ –¢–æ–≤–∞—Ä: ${order.product}\n`;
        message += `üë§ –ö–ª—ñ—î–Ω—Ç: ${order.name}\n`;
        message += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n`;
        message += `üè† –ê–¥—Ä–µ—Å–∞: ${order.address || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n\n`;
      });
      
      if (results.length > 5) {
        message += `_...—Ç–∞ —â–µ ${results.length - 5} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤_`;
      }
      
      // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å
      const keyboard = limitedResults.map(order => [
        { text: `‚úèÔ∏è –°—Ç–∞—Ç—É—Å #${order.id}`, callback_data: `admin_order_status_${order.id}` }
      ]);
      
      // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
      keyboard.push([{ text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'admin_orders' }]);
      
      bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: keyboard
        }
      });
      return;
    }

    // ----- –û–ë–†–û–ë–ö–ê –î–û–î–ê–í–ê–ù–ù–Ø –¢–û–í–ê–†–£ -----
    if (state.action === 'add_product') {
      if (state.step === 'name') {
        state.name = text;
        state.step = 'price';
        
        bot.sendMessage(chatId, 
          '‚úÖ –ù–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ.\n\n–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É —Ç–æ–≤–∞—Ä—É (–≤ –≥—Ä–Ω):',
          {
            reply_markup: {
              inline_keyboard: [
                [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_products' }]
              ]
            }
          }
        );
        return;
      }
      
      if (state.step === 'price') {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ —á–∏—Å–ª–æ
        const price = parseFloat(text.replace(/[^\d.]/g, ''));
        
        if (isNaN(price)) {
          bot.sendMessage(chatId, 
            '‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ —Ü—ñ–Ω–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è:',
            {
              reply_markup: {
                inline_keyboard: [
                  [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_products' }]
                ]
              }
            }
          );
          return;
        }
        
        state.price = price;
        state.step = 'description';
        
        bot.sendMessage(chatId, 
          '‚úÖ –¶—ñ–Ω—É —Ç–æ–≤–∞—Ä—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ.\n\n–í–≤–µ–¥—ñ—Ç—å –æ–ø–∏—Å —Ç–æ–≤–∞—Ä—É:',
          {
            reply_markup: {
              inline_keyboard: [
                [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_products' }]
              ]
            }
          }
        );
        return;
      }
      
      if (state.step === 'description') {
        state.description = text;
        state.step = 'image';
        
        bot.sendMessage(chatId, 
          '‚úÖ –û–ø–∏—Å —Ç–æ–≤–∞—Ä—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ.\n\n–¢–µ–ø–µ—Ä –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä—É –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏":',
          {
            reply_markup: {
              inline_keyboard: [
                [{ text: '‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏', callback_data: 'admin_skip_image' }],
                [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_products' }]
              ]
            }
          }
        );
        return;
      }
    }

    // ----- –û–ë–†–û–ë–ö–ê –†–û–ó–°–ò–õ–ö–ò -----
    if (state.action === 'broadcast') {
      if (state.type === 'all' || state.type === 'customers') {
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–µ–∫—Å—Ç —Ä–æ–∑—Å–∏–ª–∫–∏
        const broadcastText = text;
        
        // –û—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω
        clearState(chatId);
        
        // –°–∏–º—É–ª—é—î–º–æ —Ä–æ–∑—Å–∏–ª–∫—É (–≤ —Ä–µ–∞–ª—å–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —Ç—É—Ç –º–∞—î –±—É—Ç–∏ —Ä–æ–±–æ—Ç–∞ –∑ –±–∞–∑–æ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
        const targetType = state.type === 'all' ? '–≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º' : '–∫–ª—ñ—î–Ω—Ç–∞–º –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏';
        
        bot.sendMessage(chatId, 
          `üì¢ *–†–æ–∑—Å–∏–ª–∫—É —Ä–æ–∑–ø–æ—á–∞—Ç–æ*\n\n–†–æ–∑—Å–∏–ª–∫–∞ ${targetType} –∑ —Ç–µ–∫—Å—Ç–æ–º:\n\n${broadcastText}`,
          { parse_mode: 'Markdown' }
        );
        
        // –Ü–º—ñ—Ç—É—î–º–æ –ø—Ä–æ—Ü–µ—Å —Ä–æ–∑—Å–∏–ª–∫–∏
        setTimeout(() => {
          // –¢—É—Ç –º–∞–ª–∞ –± –±—É—Ç–∏ —Ä–µ–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–æ–∑—Å–∏–ª–∫–∏
          const recipientCount = state.type === 'all' ? Math.floor(Math.random() * 50) + 10 : adminOrders.length;
          
          bot.sendMessage(chatId, 
            `‚úÖ *–†–æ–∑—Å–∏–ª–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ*\n\n–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ ${recipientCount} –æ—Ç—Ä–∏–º—É–≤–∞—á–∞–º.`,
            {
              parse_mode: 'Markdown',
              reply_markup: {
                inline_keyboard: [
                  [{ text: '¬´ –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é', callback_data: 'admin_back' }]
                ]
              }
            }
          );
        }, 2000);
        
        return;
      }
      
      if (state.type === 'buttons') {
        if (state.step === 'text') {
          // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–µ–∫—Å—Ç —Ä–æ–∑—Å–∏–ª–∫–∏
          state.text = text;
          state.step = 'button_text';
          
          bot.sendMessage(chatId, 
            '‚úÖ –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ.\n\n–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏:',
            {
              reply_markup: {
                inline_keyboard: [
                  [{ text: '¬´ –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data: 'admin_broadcast' }]